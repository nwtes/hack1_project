:root{
  /* Primary visuals */
  --bg-gradient: linear-gradient(180deg,#eaf3ff 0%, #f6fbff 100%);
  --bg-color: #f6fbff;
  --ui-surface: linear-gradient(180deg, rgba(255,255,255,0.98), rgba(250,252,255,0.9));
  --ui-surface-contrast: rgba(255,255,255,0.9);
  --bg-map : white;
  /* Brand */
  --accent: #2d6cdf;
  --accent-contrast: #1a4bb8;
  --accent-rgb: 45,108,223; /* used where rgba(...) is needed */
  --search-text : gray;
  /* Text / semantic */
  --text-color: #153b51;
  --muted: #48627a;

  /* Cards / shadows */
  --card-shadow: 0 -12px 30px rgba(45,108,223,0.12);
  --card-border: rgba(45,108,223,0.12);

  /* Success / danger */
  --success: #1db954;
  --success-rgba: 29,185,84;
  --danger: #ff4d4f;
  --danger-rgba: 255,77,79;

  --score-color: #1a4bb8;
  --shadow-strong: 0 8px 20px rgba(29,78,169,0.12);
  /* button gradients (light theme prefers a slightly darker blue) */
  --btn-top: #234fae; /* slightly darker than --accent */
  --btn-bottom: var(--accent-contrast);
}

/* Dark theme overrides: toggle by adding `data-theme="dark"` on <html> or <body> */
body.dark-mode {
  --bg-map : black;
  --search-text : white;
  --bg-gradient: linear-gradient(180deg,#071028 0%, #06131f 100%);
  --bg-color: #06131f;
  --ui-surface: linear-gradient(180deg, rgba(10,16,24,0.95), rgba(14,18,24,0.9));
  --ui-surface-contrast: rgba(20,24,30,0.9);
  --accent: #58a6ff;
  --accent-contrast: #1f6feb;
  --accent-rgb: 88,166,255;
  --text-color: #dbeafe;
  --muted: #9fb0c9;
  --card-shadow: 0 -12px 30px rgba(0,0,0,0.6);
  --card-border: rgba(255,255,255,0.04);
  --success: #29d07a;
  --success-rgba: 41,208,122;
  --danger: #ff6b6b;
  --danger-rgba: 255,107,107;
  --score-color: #79b8ff;
  --shadow-strong: 0 8px 20px rgba(0,0,0,0.6);
  /* dark theme: make buttons match the subtle timer button look */
  --btn-top: rgba(var(--accent-rgb),0.06);
  --btn-bottom: rgba(var(--accent-rgb),0.03);
}

html, body {
  height: 100%;
  margin: 0;
  font-family: "DM Sans", sans-serif;
}

button, input, select, textarea { font-family: inherit; }
.leaflet-container, .leaflet-control, .leaflet-popup, .leaflet-popup-content { font-family: inherit; }
svg, svg text { font-family: inherit; }
.modal, .card, .side-card { font-family: inherit; }

#map {
  background-color: var(--bg-map);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 100vh;
  z-index: 0;
}

.leaflet-container {
  width: 100%;
  height: 100%;
}
#searchbar{
  color: var(--search-text);
}
#searchbar-conatiner {
  
  position: absolute;
  top: 12px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 9000;
  pointer-events: auto;
}

/* Timer - top-right visual only. JS will update #timerDisplay and toggle button states. */
.timer {
  position: fixed;
  top: 12px;
  right: 16px;
  z-index: 9200;
  display: flex;
  align-items: center;
  gap: 10px;
  background: var(--ui-surface);
  border-radius: 999px;
  padding: 6px 10px;
  box-shadow: 0 6px 20px rgba(16,40,70,0.08);
  border: 1px solid rgba(45,108,223,0.06);
}

.timer-display {
  min-width: 72px;
  font-weight: 700;
  font-size: 20px;
  color: var(--accent);
  text-align: center;
  padding: 8px 12px;
  border-radius: 999px;
  background: linear-gradient(90deg, rgba(var(--accent-rgb),0.08), rgba(var(--accent-rgb),0.03));
}

/* Timer delta (+-4) that slides under the counter */
.timer-wrap { position: relative; display: inline-block; }
.timer-delta {
  position: absolute;
  left: 50%;
  top: 100%; /* start below the counter */
  transform: translateX(-50%) translateY(8px);
  font-weight: 800;
  font-size: 35px;
  line-height: 1;
  padding: 2px 6px;
  color: var(--accent-contrast);
  opacity: 0;
  pointer-events: none;
  user-select: none;
  transition: none;
}
.timer-delta.positive { color: var(--success); /* green */ text-shadow: 0 2px 6px rgba(var(--success-rgba),0.12); }
.timer-delta.negative { color: var(--danger); /* red */ text-shadow: 0 2px 6px rgba(var(--danger-rgba),0.12); }

@keyframes delta-slide {
  0% { transform: translateX(-50%) translateY(16px); opacity: 0; }
  20% { transform: translateX(-50%) translateY(4px); opacity: 1; }
  60% { transform: translateX(-50%) translateY(0px); opacity: 1; }
  100% { transform: translateX(-50%) translateY(14px); opacity: 0; }
}

.timer-delta.show {
  animation: delta-slide 820ms cubic-bezier(.2,.9,.2,1) forwards;
}

@media (prefers-reduced-motion: reduce) {
  .timer-delta.show { animation: none !important; opacity: 1; transform: translateX(-50%) translateY(0); }
}

.timer-controls {
  display: flex;
  gap: 6px;
  align-items: center;
}

.timer-btn {
  background: transparent;
  border: none;
  padding: 6px 8px;
  border-radius: 8px;
  color: var(--muted);
  font-size: 17px;
  font-weight: 600;
}
.timer-btn:hover{
  background-color: var(--accent-contrast);
  color: white;
}
.timer-btn:enabled {
  cursor: pointer;
  color: var(--accent-contrast);
  background: rgba(var(--accent-rgb),0.06);
}

@media (max-width: 600px) {
  .timer { right: 12px; left: auto; padding: 6px; gap:8px; top: 12px; }
  .timer-display { min-width: 58px; font-size: 1rem; }
  .timer-btn { padding: 6px 8px; font-size: 0.95rem; }
}

/* Score display - top-left floating number, no background */
.score-display {
  position: fixed;
  top: 12px;
  left: 16px;
  z-index: 9300;
  color: var(--score-color);
  font-weight: 800;
  font-size: 50px;
  line-height: 1;
  padding: 0;
  margin: 0;
  background: transparent;
  text-shadow: 0 2px 6px rgba(26,75,184,0.14);
  pointer-events: none; /* purely decorative */
  user-select: none;
  /* start hidden off-screen above the viewport; JS toggles the .show class */
  transform: translateY(-140%);
  opacity: 0;
  transition: transform 360ms cubic-bezier(.2,.9,.2,1), opacity 240ms ease;
}

.score-display.show {
  transform: translateY(0);
  opacity: 1;
}

@media (max-width: 600px) {
  .score-display { left: 10px; font-size: 28px; top: 12px; }
  #searchbar-conatiner { left: 50%; right: auto; top: 12px; transform: translateX(-50%); position: fixed; z-index: 9000; width: calc(100% - 32px); }
  #searchbar { width: 100%; min-width: 0; max-width: none; }
  .timer { right: 12px; left: auto; top: 12px; }
}

#searchbar {
  padding: 8px 14px;
  border-radius: 999px;
  border: 1px solid var(--card-border);
  background: var(--ui-surface-contrast);
  min-width: 180px;
  max-width: 720px;
  width: auto;
  box-shadow: var(--shadow-strong);
  outline: none;
}

.card {
  position: fixed;
  left: 50%;
  bottom: 0;
  transform: translate(-50%, 100%);
  width: 90%;
  max-width: 1200px;
  height: 20vh;
  min-height: 140px;
  background: var(--bg-gradient);
  box-shadow: var(--card-shadow);
  border-top-left-radius: 14px;
  border-top-right-radius: 14px;
  border-top: 1px solid var(--card-border);
  transition: transform 320ms cubic-bezier(.2,.9,.2,1);
  z-index: 5000;
  overflow: hidden;
  padding: 18px 22px;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: var(--text-color);
  backdrop-filter: blur(4px);
}

.card.show {
  transform: translate(-50%, 0);
}

.card .handle{
  width: 56px;
  height: 6px;
  background: rgba(var(--accent-rgb),0.12);
  border-radius: 6px;
  margin: 4px auto 10px;
}

.card h2 {
  margin: 0;
  font-size: 2rem;
  font-weight: 700;
  color: var(--accent);
  letter-spacing: -0.4px;
  text-align: center;
}

#card-text {
  margin: auto 0;
  font-size: 1.45rem;
  line-height: 1.6;
  text-align: center;
  max-width: 92%;
  color: var(--text-color);
}

.close-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 36px;
  height: 36px;
  border: 1px solid var(--card-border);
  background: var(--ui-surface-contrast);
  border-radius: 10px;
  font-size: 20px;
  color: var(--accent);
  cursor: pointer;
  display: grid;
  place-items: center;
  box-shadow: var(--shadow-strong);
}

.close-btn:hover {
  transform: translateY(-1px);
  box-shadow: var(--shadow-strong);
}

.card ::-webkit-scrollbar{ height:8px; width:8px; }
.card ::-webkit-scrollbar-thumb{ background: rgba(var(--accent-rgb),0.16); border-radius:6px; }
.card ::-webkit-scrollbar-track{ background: transparent; }

.show-btn {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  bottom: 18px;
  z-index: 5200;
  /* use button gradient variables so we can tune per-theme */
  padding: 10px 14px;
  border-radius: 10px;
  border: none;
  background: linear-gradient(180deg,var(--btn-top), var(--btn-bottom));
  color: #fff;
  cursor: pointer;
  font-weight: 600;
  box-shadow: var(--shadow-strong);
}

/* Ensure .show-btn keeps a solid visible background even when combined with .timer-btn
   (some rules like .timer-btn:enabled can add a translucent background). Use a more
   specific selector to override those styles reliably. */
.show-btn.timer-btn {
  background: linear-gradient(180deg,var(--accent), var(--accent-contrast)) !important;
  color: #fff !important;
  padding: 10px 14px !important;
  border-radius: 10px !important;
  box-shadow: var(--shadow-strong) !important;
}

/* In dark mode, make the guess button appear like the subtle timed-quiz control */
body.dark-mode .show-btn.timer-btn {
  background: rgba(var(--accent-rgb),0.06) !important;
  color: var(--accent-contrast) !important;
  padding: 6px 10px !important;
  border-radius: 8px !important;
  box-shadow: none !important;
}
.quiz-btn{
  left:16px;
  position: fixed;
  bottom: 18px;
  z-index: 5200;
  padding: 10px 14px;
  border-radius: 10px;
  border: none;
  background: linear-gradient(180deg,var(--accent), var(--accent-contrast));
  color: #fff;
  cursor: pointer;
  font-weight: 600;
  box-shadow: var(--shadow-strong);

}
.show-side-btn {
  position: fixed;
  left: 16px;
  bottom: 18px;
  z-index: 5250;
  padding: 10px 14px;
  min-width: 140px;
  border-radius: 10px;
  border: none;
  background: linear-gradient(180deg,var(--accent), var(--accent-contrast));
  color: #fff;
  cursor: pointer;
  font-weight: 600;
  box-shadow: var(--shadow-strong);
  transition: transform .15s ease, box-shadow .15s ease, opacity .12s ease;
}

.show-side-btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-strong);
}

.show-side-btn:active {
  transform: translateY(0);
  opacity: 0.95;
}

.show-side-btn:focus {
  outline: 3px solid rgba(var(--accent-rgb),0.18);
  outline-offset: 2px;
}

/* Theme toggle button (left-bottom) */
.theme-toggle {
  position: fixed;
  left: 16px;
  bottom: 78px; /* above other left-bottom controls */
  z-index: 9400;
  width: 48px;
  height: 48px;
  border-radius: 12px;
  border: none;
  display: grid;
  place-items: center;
  font-size: 20px;
  cursor: pointer;
  background: linear-gradient(180deg,var(--accent), var(--accent-contrast));
  color: #fff;
  box-shadow: var(--shadow-strong);
}
.theme-toggle[aria-pressed="true"] {
  background: linear-gradient(180deg,var(--accent-contrast), var(--accent));
}
.theme-toggle:focus { outline: 3px solid rgba(var(--accent-rgb), 0.18); outline-offset: 2px; }

/* left-side sliding card (20% width, 80% height) */
.side-card {
  position: fixed;
  left: 0;
  top: 50%;
  transform: translate(-100%, -50%); /* hidden off-screen to the left */
  width: 20vw;
  min-width: 220px;
  height: 80vh;
  background: var(--bg-gradient);
  box-shadow: var(--card-shadow);
  border-top-right-radius: 14px;
  border-bottom-right-radius: 14px;
  border-left: 1px solid var(--card-border);
  transition: transform 320ms cubic-bezier(.2,.9,.2,1);
  z-index: 6000;
  overflow: hidden;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  
  backdrop-filter: blur(4px);
}
.side-card-text{
  color: #6398df;
}
.side-card-text-var{
  color: var(--text-color);
}
.side-card-info{
  font-size: 28px;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center; /* center content vertically */
  align-items: center;
  gap: 20px; /* consistent spacing between info rows */
}
/* visible state */
.side-card.show {
  transform: translate(0, -50%); /* slide in from left */
}

/* handle (optional small bar at top) */
.side-card .handle {
  width: 36px;
  height: 6px;
  background: rgba(var(--accent-rgb),0.12);
  border-radius: 6px;
  margin: 6px 0 12px;
}

/* adjust heading and paragraph for narrow, tall layout */
.side-card h2 {
  font-size: 1.6rem;
  line-height: 1.05;
  color: var(--accent);
  text-align: center;
  margin: 6px 0;
}

/* Country card title and info adjustments */
#countryCard .side-card-header h1,
#countryCard #countryName {
  font-size: 2rem; /* slightly larger title */
  line-height: 1.05;
  margin: 6px 0 0 0;
  text-align: center;
  color: var(--text-color);
}

.side-card #card-text {
  font-size: 1.15rem;
  line-height: 1.5;
  text-align: center;
  color: var(--text-color);
  overflow: auto;
  width: 100%;
  padding: 6px 4px;
}

.side-card-info span { text-align: center; display: block; }

/* move close button to the inner top-right corner of the side card */
.side-card .close-btn {
  top: 8px;
  right: 8px;
}

/* responsive fallback: on very small screens make it wider */
@media (max-width: 600px) {
  .side-card { width: 36vw; min-width: 200px; }
}
.layer-correct,
.layer-wrong {
  transform-box: fill-box; /* important for SVG */
  transform-origin: center center;
}

/* persistent styles (use CSS vars so colors can change with theme) */
.layer-correct {
  stroke: var(--success) !important;
  stroke-width: 2.2 !important;
  fill: rgba(var(--success-rgba),0.12) !important;
  filter: drop-shadow(0 8px 18px rgba(var(--success-rgba),0.18));
}
.layer-wrong {
  stroke: var(--danger) !important;
  stroke-width: 2.2 !important;
  fill: rgba(var(--danger-rgba),0.12) !important;
  filter: drop-shadow(0 8px 18px rgba(var(--danger-rgba),0.12));
}

/* transient pulse */
/* Removed transient animation classes and keyframes.
   Keep only persistent correct/wrong styling (colors/stroke). */

/* Modal overlay for end-of-round score */
.modal-overlay {
  position: fixed;
  inset: 0;
  display: block;
  background: rgba(0,0,0,0.35);
  z-index: 10000;
}
.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: var(--ui-surface);
  color: var(--text-color);
  padding: 18px 20px;
  border-radius: 12px;
  box-shadow: var(--card-shadow);
  min-width: 280px;
  max-width: 420px;
  text-align: center;
  z-index: 10001;
}
.modal h2 { margin-top: 0; }
.modal-actions { display:flex; gap: 10px; justify-content:center; margin-top:12px; }
.modal .timer-btn { padding: 8px 12px; border-radius: 8px; }

.in-quiz #searchbar-conatiner { display: none !important; }
.in-quiz #themeToggle,
.card.show ~ #themeToggle {
  display: none !important;
  visibility: hidden !important;
  pointer-events: none !important;
}

@media (prefers-reduced-motion: reduce) {
  .modal-overlay { transition: none !important; }
}